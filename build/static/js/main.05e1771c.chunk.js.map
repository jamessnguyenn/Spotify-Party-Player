{"version":3,"sources":["Components/Login/Login.jsx","Components/Queue/AutoCompleteText.jsx","socket.js","Components/Queue/QueueList.jsx","Components/Queue/Queue.jsx","App.js","index.js"],"names":["Login","scopes","className","type","value","onClick","window","location","process","join","AutoCompleteText","textField","updateList","songSelected","songs","clearSongs","node","useRef","useEffect","document","addEventListener","handleClick","removeEventListener","e","current","contains","target","ref","placeholder","onChange","length","map","item","name","socket","io","QueueList","queueList","id","element","src","image","width","height","track","artist","Queue","useState","showError","setShowError","error","setError","values","queryString","parse","hash","setSongs","setTextField","setQueueList","setName","userNumber","setUserNumber","history","useHistory","getRandomHit","a","axios","get","proxyurl","response","html","data","$","cheerio","load","topSongs","find","each","i","push","children","artists","pos","Math","floor","random","rndSong","song","on","number","queueItem","console","log","prevQueueList","queryURL","stringifyUrl","url","query","uri","post","headers","access_token","then","res","catch","err","status","display_name","disconnect","queueRandomSong","result","q","tracks","items","album","images","emit","message","songList","forEach","selectedItem","substring","App","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.05e1771c.chunk.js","sourcesContent":["import \"./Login.css\";\r\n\r\n\r\nfunction Login(){\r\nconst clientID  = process.env.REACT_APP_CLIENT_ID;\r\nconst redirectUri = \"https://spotify-queue-party.herokuapp.com/queue\";//\"http://localhost:3000/queue\"; \r\nconst scopes =['user-modify-playback-state', 'user-read-private']\r\n\r\nconst login = ()=>{\r\n   window.location = `https://accounts.spotify.com/authorize?client_id=${clientID}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;\r\n}\r\n\r\nreturn(\r\n<div className = \"login-page\">\r\n    <div className = \"login-container\">\r\n        <div className=\"song-info-contianer\">\r\n        </div>\r\n        <div className=\"login-form\" >\r\n        <div className= \"login-title-container\">\r\n            <h1 className= \"login-title\">Spotify Party Playlist</h1>\r\n            \r\n        </div>\r\n        <div className= \"sub-text-container\">\r\n        <label className=\"sub-text\">Listen with people across the World!</label>\r\n        </div>\r\n            <div className=\"button-container\"> \r\n            <input type=\"button\" className=\"login-button\" value=\"Sign in with Spotify\" onClick = {login}/>\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n   \r\n</div>    \r\n);\r\n\r\n}\r\nexport default Login;","import { useEffect, useState, useRef } from \"react\";\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\nfunction AutoCompleteText({textField, updateList, songSelected, songs, clearSongs}){\r\n   \r\n   const node = useRef();\r\n\r\n    useEffect(()=>{\r\n        document.addEventListener('mousedown', handleClick, false);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClick);\r\n          };\r\n    },[])\r\n\r\n    \r\n    const handleClick = e =>{\r\n        if(node.current.contains(e.target)){\r\n            return;\r\n        }\r\n        clearSongs();\r\n        \r\n      }\r\n\r\n    return(\r\n        <div ref={node}className=\"text-field-container\">\r\n             <input type=\"text\" value={textField} placeholder=\"Search for song or enter a uri\" className=\"song-text-field\" onChange={updateList}/>\r\n           {songs.length!=0 && <ul>\r\n                {songs.map((item)=> <li onClick={()=>songSelected(item)}>{item.name}</li>)}\r\n            </ul>}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AutoCompleteText;","import io from \"socket.io-client\";\r\n\r\nexport const socket = io();","\r\n\r\nfunction QueueList({ queueList }) {\r\n\r\n    return (\r\n        <div className=\"list-container\">\r\n            <label className=\"queue-title\">Queue Session History</label>\r\n            <table id=\"queue-table\">\r\n\r\n                {queueList.map((element) => {\r\n                    return <tr>\r\n                        <td className=\"image-column\"><img src={element.image} width=\"40\" height=\"40\" /></td>\r\n                        <td className=\"track-column\">{element.track}</td>\r\n                        <td className=\"artist-column\">{element.artist}</td>\r\n                        <td className=\"name-column\">{element.name}</td>\r\n                    </tr>\r\n                })}\r\n\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\nexport default QueueList;","import axios from 'axios';\r\nimport cheerio from 'cheerio';\r\nimport queryString from 'query-string';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AutoCompleteText from './AutoCompleteText';\r\nimport {socket} from \"../../socket\";\r\n\r\nimport \"./Queue.css\";\r\nimport QueueList from './QueueList';\r\nfunction Queue() {\r\n  const [showError, setShowError] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const values = queryString.parse(window.location.hash);\r\n  const [songs, setSongs] = useState([]);\r\n  const [textField, setTextField] = useState('');\r\n  const [queueList, setQueueList] = useState([]);\r\n  const [name, setName] = useState([]);\r\n  const[userNumber, setUserNumber] = useState();\r\n  let history = useHistory();\r\n \r\n \r\n\r\n  useEffect(()=>{\r\n    socket.on('userUpdate', number =>  setUserNumber(number));\r\n    socket.on('broadcastQueue', queueItem=>{\r\n      console.log(\"Broadcasted!\");\r\n      setQueueList(prevQueueList => [queueItem, ...prevQueueList]); \r\n      const queryURL = queryString.stringifyUrl({ url: \"https://api.spotify.com/v1/me/player/queue\", query: { uri: queueItem.uri } })\r\n      axios.post(queryURL, null, {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + values.access_token\r\n        }\r\n      })\r\n        .then(res => \"Successfuly added\")\r\n        .catch(err =>{\r\n          if(err.response.status == 401){\r\n            history.push('/');\r\n         }\r\n        })\r\n  \r\n  \r\n    });\r\n    axios.get(\"https://api.spotify.com/v1/me\",{\r\n      headers:{\r\n        'Authorization': 'Bearer '+ values.access_token\r\n      }\r\n    })\r\n    .then(res=>{\r\n      if(res.data.display_name == null){\r\n        setName('Anonymous');\r\n      }else{\r\n        setName(res.data.display_name);\r\n      }\r\n    })\r\n    .catch(err=>{\r\n     if(err.response.status == 401){\r\n        history.push('/');\r\n     }\r\n    })\r\n  \r\n    return () => socket.disconnect();\r\n  },[]);\r\n\r\n\r\n  const addToQueue = queueItem => {\r\n\r\n    \r\n\r\n  }\r\n\r\n  async function getRandomHit() {\r\n    const proxyurl = \"https://api.allorigins.win/raw?url=\";\r\n    const url = \"https://www.billboard.com/charts/hot-100\";\r\n\r\n    const response = await axios.get(proxyurl + url)\r\n\r\n    var rndSong = null;\r\n    //handling the success\r\n    const html = response.data;\r\n\r\n    //loading response data into a Cheerio instance\r\n    const $ = cheerio.load(html);\r\n\r\n    //selecting the data\r\n\r\n    //Songs names\r\n    var topSongs = [];\r\n    $(\"ol[class='chart-list__elements']\")\r\n      .find(\r\n        \"span[class='chart-element__information__song text--truncate color--primary']\"\r\n      )\r\n      .each(function (i, element) {\r\n        topSongs.push(element.children[0].data);\r\n      });\r\n\r\n    //Artists names\r\n    var artists = [];\r\n    $(\"ol[class='chart-list__elements']\")\r\n      .find(\r\n        \"span[class='chart-element__information__artist text--truncate color--secondary']\"\r\n      )\r\n      .each(function (i, element) {\r\n        artists.push(element.children[0].data);\r\n      });\r\n\r\n    //get the artist and song randomly\r\n    var pos = Math.floor(Math.random() * 101);\r\n\r\n    rndSong = { artist: artists[pos], song: topSongs[pos] };\r\n\r\n    return rndSong;\r\n\r\n  }\r\n\r\n  const updateList = e => {\r\n    setShowError(false);\r\n    setTextField(e.target.value);\r\n    const queryURL = queryString.stringifyUrl({ url: 'https://api.spotify.com/v1/search', query: { q: e.target.value, type: 'track' } });\r\n    axios.get(queryURL, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + values.access_token\r\n      }\r\n    })\r\n      .then(res => {\r\n        const items = res.data.tracks.items;\r\n        const songList = []\r\n        items.forEach(element => {\r\n          songList.push({ name: element.name + \" by \" + element.artists[0].name, uri: element.uri })\r\n        });\r\n        setSongs(songList);\r\n      })\r\n      .catch(err => {\r\n        if(err.response.status == 401){\r\n          history.push('/');\r\n       }\r\n        setSongs([]);\r\n      })\r\n  };\r\n\r\n\r\n  function songSelected(selectedItem) {\r\n    setTextField(selectedItem.uri);\r\n    setSongs([]);\r\n  }\r\n\r\n  const clearSongs = () => {\r\n    setSongs([]);\r\n  }\r\n\r\n  const queueSong = () => {\r\n    const uri=textField;\r\n    const queryURL = queryString.stringifyUrl({ url: \"https://api.spotify.com/v1/me/player/queue\", query: { uri: textField } })\r\n    axios.post(queryURL, null, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + values.access_token\r\n      }\r\n    })\r\n      .then(res => {\r\n       \r\n        axios.get('https://api.spotify.com/v1/tracks/'+ textField.substring(14),{\r\n          headers:{\r\n            'Authorization': 'Bearer ' + values.access_token\r\n          }\r\n        })\r\n        .then(res=>{\r\n          const queueItem = {\r\n            artist:res.data.artists[0].name,\r\n            track:res.data.name,\r\n            image:res.data.album.images[res.data.album.images.length-1].url,\r\n            name: name,\r\n            uri:uri\r\n          }\r\n          socket.emit('addQueue', queueItem);\r\n          setQueueList(prevQueueList => [queueItem, ...prevQueueList]); \r\n        })\r\n\r\n        setTextField('');\r\n      })\r\n      .catch(err => {\r\n        if(err.response.status == 401){\r\n          history.push('/');\r\n       }\r\n        setError(err.response.data.error.message);\r\n        setShowError(true);\r\n      })\r\n\r\n  }\r\n\r\n  const queueRandomSong = async () => {\r\n    const result = await getRandomHit();\r\n    setShowError(false);\r\n    const queryURL = queryString.stringifyUrl({ url: 'https://api.spotify.com/v1/search', query: { q: result.song, type: 'track' } });\r\n    axios.get(queryURL, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + values.access_token\r\n      }\r\n    })\r\n      .then(res => {\r\n        const uri = res.data.tracks.items[0].uri;\r\n        const queryURL = queryString.stringifyUrl({ url: \"https://api.spotify.com/v1/me/player/queue\", query: { uri: res.data.tracks.items[0].uri } })\r\n         const queueItem = {\r\n          artist:res.data.tracks.items[0].artists[0].name,\r\n          track:res.data.tracks.items[0].name,\r\n          image:res.data.tracks.items[0].album.images[res.data.tracks.items[0].album.images.length-1].url,\r\n          name: name,\r\n          uri: uri\r\n        };\r\n        axios.post(queryURL, null, {\r\n          headers: {\r\n            'Authorization': 'Bearer ' + values.access_token\r\n          }\r\n        })\r\n          .then(res => {\r\n            console.log(\"Sucessfully Added\");\r\n            socket.emit('addQueue', queueItem);\r\n            setQueueList(prevQueueList => [queueItem, ...prevQueueList]); \r\n           \r\n          })\r\n          .catch(err => {\r\n           if(err.response.status == 401){\r\n              history.push('/');\r\n           }\r\n            console.log(err.response.data);\r\n            setError(err.response.data.error.message);\r\n            setShowError(true);\r\n            console.log(err)\r\n          })\r\n       \r\n      })\r\n      .catch(err=>{\r\n        if(err.response.status == 401){\r\n          history.push('/');\r\n       }\r\n        console.log(err);\r\n      });\r\n\r\n\r\n  }\r\n  return (\r\n    <div className=\"queue-page\">\r\n      <div className=\"queue-container\">\r\n        <div className=\"title-container\">\r\n          <h1>Welcome to the Queue!</h1>\r\n          <label className=\"listener-text\">{userNumber} {userNumber==1? 'person' : 'people'} exploring new music together</label>\r\n        </div>\r\n        <QueueList queueList={queueList}/>\r\n        <div className=\"information-container\">\r\n          <div className=\"form-container\">\r\n            <AutoCompleteText textField={textField} updateList={updateList} songSelected={songSelected} songs={songs} clearSongs={clearSongs} />\r\n            {showError && <label className=\"error-label\">{error}</label>}\r\n            <input className=\"add-button\" type=\"button\" value=\"Share with the world\" onClick={queueSong} />\r\n            <input className=\"random-button\" type=\"button\" value=\"Queue a random song\" onClick={queueRandomSong} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Queue;\r\n\r\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./Components/Login/Login\";\nimport Queue from \"./Components/Queue/Queue\";\nfunction App() {\n  return (\n   <Router>\n     <Switch>\n       <Route exact path=\"/\">\n         <Login/>\n       </Route>\n       <Route path=\"/queue\">\n         <Queue/>\n       </Route>\n     </Switch>\n   </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}